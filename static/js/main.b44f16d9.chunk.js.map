{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","total","setTotal","handleClick","e","concat","target","name","Clear","Back","slice","length","result","eval","toString","err","className","Control","type","value","onClick","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"84CAKA,SAASA,MAEL,cAA0BC,oDAAS,IAAnC,gLAAOC,MAAP,cAAcC,SAAd,cAEMC,YAAc,SAACC,GAClBF,SAASD,MAAMI,OAAOD,EAAEE,OAAOC,QAI5BC,MAAQ,WACZN,SAAS,KAILO,KAAO,WACXP,SAASD,MAAMS,MAAM,EAAGT,MAAMU,OAAS,KAGnCC,OAAS,SAATA,SACJ,IACEV,SAASW,KAAKZ,OAAOa,YACtB,MAAMC,KACLb,SAAS,WAIf,OACE,kEAAKc,UAAU,MAAf,SACE,qEAAQA,UAAU,aAAlB,SACE,kEAAKA,UAAU,aAAf,SACE,2DAAC,+CAAD,UACF,2DAAC,+CAAD,UACA,4DAAC,+CAAD,WACA,2DAAC,+CAAD,UACA,2DAAC,+CAAD,UACI,2DAAC,+CAAKC,QAAN,CAAcC,KAAO,OAAOC,MAASlB,YAKvC,4DAAC,+CAAD,WACF,2DAAC,+CAAD,CAAQM,KAAO,IAAIa,QAAWjB,YAAaa,UAAY,MAAvD,eACA,2DAAC,+CAAD,CAAQT,KAAO,IAAIa,QAAWjB,YAAca,UAAY,MAAxD,eACA,2DAAC,+CAAD,CAAQT,KAAO,IAAIa,QAAWjB,YAAca,UAAY,MAAxD,kBAEC,4DAAC,+CAAD,WACD,2DAAC,+CAAD,CAAQT,KAAO,IAAIa,QAAWjB,YAAca,UAAY,MAAxD,eACA,2DAAC,+CAAD,CAAQT,KAAO,IAAIa,QAAWjB,YAAca,UAAY,MAAxD,eACA,2DAAC,+CAAD,CAAQT,KAAO,IAAIa,QAAWjB,YAAca,UAAY,MAAxD,kBAEA,4DAAC,+CAAD,WACA,2DAAC,+CAAD,CAAQT,KAAO,IAAIa,QAAWjB,YAAca,UAAY,MAAxD,eACA,2DAAC,+CAAD,CAAQT,KAAO,IAAIa,QAAWjB,YAAca,UAAY,MAAxD,eACA,2DAAC,+CAAD,CAAQT,KAAO,IAAIa,QAAWjB,YAAca,UAAY,MAAxD,kBAEA,4DAAC,+CAAD,WACA,2DAAC,+CAAD,CAAQT,KAAO,IAAIa,QAAWjB,YAAca,UAAY,MAAxD,eACA,2DAAC,+CAAD,CAAQT,KAAO,IAAIa,QAAWjB,YAAca,UAAY,MAAxD,eACA,2DAAC,+CAAD,CAAQT,KAAO,IAAIa,QAAWjB,YAAca,UAAY,MAAxD,kBAEA,4DAAC,+CAAD,WACA,2DAAC,+CAAD,CAAQT,KAAO,IAAIa,QAAWjB,YAAca,UAAY,MAAxD,eACA,2DAAC,+CAAD,CAAQT,KAAO,IAAIa,QAAWjB,YAAca,UAAY,MAAxD,eACA,2DAAC,+CAAD,CAAQT,KAAO,IAAIa,QAAWjB,YAAca,UAAY,MAAxD,kBAEA,4DAAC,+CAAD,WACA,2DAAC,+CAAD,CAAQK,GAAK,QAAQD,QAAWR,OAASI,UAAY,MAArD,mBACA,2DAAC,+CAAD,CAAQI,QAAWZ,MAAOQ,UAAY,MAAtC,mBACA,2DAAC,+CAAD,CAAQI,QAAWX,KAAMO,UAAY,MAArC,oCAWOjB,2B,sICxEAuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClC,EAAA,EAAD,MAEFmC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b44f16d9.chunk.js","sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Container, Button, Col, Row, Form } from 'react-bootstrap';\nimport {useState} from 'react';\n\nfunction App() {\n\n    const [total, setTotal] = useState(\"\");\n\n    const handleClick = (e) => {\n       setTotal(total.concat(e.target.name));\n    } \n\n\n    const Clear = () => {\n      setTotal(\"\");\n    }\n\n\n    const Back = () => {\n      setTotal(total.slice(0, total.length - 1));\n    }\n\n    const result = () => {\n      try{\n        setTotal(eval(total).toString());\n      }catch(err){\n        setTotal(\"Error\");\n      }\n    }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"App-keypad\">\n          <Card>\n        <Container>\n        <Col>\n        <Col>\n        <Form>\n            <Form.Control type = \"text\" value = {total}>\n               \n            </Form.Control>\n        </Form>\n        </Col>\n          <Col>\n        <Button name = \"1\" onClick = {handleClick} className = \"m-1\">1</Button>\n        <Button name = \"2\" onClick = {handleClick}  className = \"m-1\">2</Button>\n        <Button name = \"3\" onClick = {handleClick}  className = \"m-1\">3</Button>\n         </Col>\n         <Col>\n        <Button name = \"4\" onClick = {handleClick}  className = \"m-1\">4</Button>\n        <Button name = \"5\" onClick = {handleClick}  className = \"m-1\">5</Button>\n        <Button name = \"6\" onClick = {handleClick}  className = \"m-1\">6</Button>\n        </Col>\n        <Col>\n        <Button name = \"7\" onClick = {handleClick}  className = \"m-1\">7</Button>\n        <Button name = \"8\" onClick = {handleClick}  className = \"m-1\">8</Button>\n        <Button name = \"9\" onClick = {handleClick}  className = \"m-1\">9</Button>\n        </Col>\n        <Col>\n        <Button name = \"0\" onClick = {handleClick}  className = \"m-1\">0</Button>\n        <Button name = \"+\" onClick = {handleClick}  className = \"m-1\">+</Button>\n        <Button name = \"-\" onClick = {handleClick}  className = \"m-1\">-</Button>\n        </Col>\n        <Col>\n        <Button name = \"*\" onClick = {handleClick}  className = \"m-1\">*</Button>\n        <Button name = \"/\" onClick = {handleClick}  className = \"m-1\">/</Button>\n        <Button name = \".\" onClick = {handleClick}  className = \"m-1\">.</Button>\n        </Col>\n        <Col>\n        <Button id = \"total\" onClick = {result}  className = \"m-1\">Equal</Button>\n        <Button onClick = {Clear} className = \"m-1\">Clear</Button>\n        <Button onClick = {Back} className = \"m-1\"> BACK </Button>\n        </Col>  \n        </Col>   \n        </Container>\n        </Card>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}